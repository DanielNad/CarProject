{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TablePagination } from \"@material-ui/core\";\nimport Config from \"../../../config\";\nimport Editable from \"./Editable\";\nimport NewCar from \"./NewCar\"; // Devide big chuncks of code\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  h1: {\n    fontFamily: \"Roboto\",\n    textAlign: \"center\",\n    color: \"#555555\"\n  }\n}));\n\nclass CarTable extends React.Component {\n  constructor(props) {\n    super(props);\n    const classes = useStyles();\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.state = {\n      data: [],\n      page: 0\n    };\n  }\n\n  handleChangePage(event, newPage) {\n    this.setState(() => {\n      return {\n        page: newPage\n      };\n    });\n  }\n\n  async fetchData() {\n    try {\n      const res = await axios.get(`${Config._URI}/data`, {\n        config: Config._CONFIG\n      });\n\n      if (res.status === 200) {\n        const newData = await res.json();\n        console.log(newData); // setData(newData.data);\n      }\n    } catch (e) {}\n  }\n\n  async handleDeleteCar(e, _id) {\n    try {\n      const res = await axios.delete(`${URI}/data`, {\n        // config,\n        data: {\n          _id: _id\n        }\n      });\n\n      if (res.status === 200) {\n        // const newData = data.filter((car) => car._id !== _id);\n        // this.setData(newData);\n        console.log(\"sucsses\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n} //   return (\n//     <Grid container spacing={10} direction=\"column\" alignItems=\"center\">\n//       <Grid item xs={12} lg={8}>\n//         <Grid item xs={12}>\n//           <h1 className={classes.h1}>Our Cars</h1>\n//         </Grid>\n//         <TableContainer component={Paper}>\n//           <Table className={classes.table} aria-label=\"simple table\">\n//             <TableHead>\n//               <TableRow>\n//                 <TableCell align=\"center\">Car name</TableCell>\n//                 <TableCell align=\"center\">Top speed</TableCell>\n//                 <TableCell align=\"center\">Price</TableCell>\n//                 <TableCell align=\"center\">Delete</TableCell>\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {data &&\n//                 Array.isArray(data) &&\n//                 data.map((car, index) => {\n//                   if (index <= (page + 1) * 5 - 1 && index >= page * 5) {\n//                     return (\n//                       <TableRow key={car._id}>\n//                         <Editable\n//                           data={car}\n//                           _id={car._id}\n//                           type=\"name\"\n//                           value={car.name}></Editable>\n//                         <Editable\n//                           data={car}\n//                           _id={car._id}\n//                           type=\"topSpeed\"\n//                           value={car.topSpeed}></Editable>\n//                         <Editable\n//                           data={car}\n//                           _id={car._id}\n//                           type=\"price\"\n//                           value={car.price}></Editable>\n//                         <TableCell align=\"left\">\n//                           <Button onClick={(e) => handleDeleteCar(e, car._id)}>\n//                             Delete\n//                           </Button>\n//                         </TableCell>\n//                       </TableRow>\n//                     );\n//                   }\n//                   return <div></div>;\n//                 })}\n//             </TableBody>\n//           </Table>\n//           <TablePagination\n//             rowsPerPageOptions={[5]}\n//             // Exception thrown but not handled\n//             count={data.length}\n//             rowsPerPage={5}\n//             page={page}\n//             onChangePage={handleChangePage}\n//           />\n//         </TableContainer>\n//       </Grid>\n//       <Grid item xs={12}>\n//         <NewCar url={URI} fetchData={fetchData} />\n//       </Grid>\n//     </Grid>\n//   );\n// };\n\n\nexport default CarTable;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/Projects/Web Development/Rescana/CarProjects/frontend/src/Components/main/CarTabel.jsx"],"names":["React","useState","useEffect","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","makeStyles","Button","Grid","TablePagination","Config","Editable","NewCar","useStyles","theme","root","padding","spacing","h1","fontFamily","textAlign","color","CarTable","Component","constructor","props","classes","handleChangePage","bind","state","data","page","event","newPage","setState","fetchData","res","get","_URI","config","_CONFIG","status","newData","json","console","log","e","handleDeleteCar","_id","delete","URI","error","componentDidMount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TablePagination } from \"@material-ui/core\";\n\nimport Config from \"../../../config\";\nimport Editable from \"./Editable\";\nimport NewCar from \"./NewCar\";\n\n// Devide big chuncks of code\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(4),\n  },\n  h1: {\n    fontFamily: \"Roboto\",\n    textAlign: \"center\",\n    color: \"#555555\",\n  },\n}));\n\nclass CarTable extends React.Component {\n  constructor(props) {\n    super(props);\n    const classes = useStyles();\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.state = {\n      data: [],\n      page: 0,\n    };\n  }\n\n  handleChangePage(event, newPage) {\n    this.setState(() => {\n      return { page: newPage };\n    });\n  }\n\n  async fetchData() {\n    try {\n      const res = await axios.get(`${Config._URI}/data`, {\n        config: Config._CONFIG,\n        \n      });\n      if (res.status === 200) {\n        const newData = await res.json();\n        console.log(newData);\n        // setData(newData.data);\n      }\n    } catch (e) {}\n  }\n\n  async handleDeleteCar(e, _id) {\n    try {\n      const res = await axios.delete(`${URI}/data`, {\n        // config,\n        data: {\n          _id: _id,\n        },\n      });\n      if (res.status === 200) {\n        // const newData = data.filter((car) => car._id !== _id);\n        // this.setData(newData);\n        console.log(\"sucsses\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n}\n\n//   return (\n//     <Grid container spacing={10} direction=\"column\" alignItems=\"center\">\n//       <Grid item xs={12} lg={8}>\n//         <Grid item xs={12}>\n//           <h1 className={classes.h1}>Our Cars</h1>\n//         </Grid>\n//         <TableContainer component={Paper}>\n//           <Table className={classes.table} aria-label=\"simple table\">\n//             <TableHead>\n//               <TableRow>\n//                 <TableCell align=\"center\">Car name</TableCell>\n//                 <TableCell align=\"center\">Top speed</TableCell>\n//                 <TableCell align=\"center\">Price</TableCell>\n//                 <TableCell align=\"center\">Delete</TableCell>\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {data &&\n//                 Array.isArray(data) &&\n//                 data.map((car, index) => {\n//                   if (index <= (page + 1) * 5 - 1 && index >= page * 5) {\n//                     return (\n//                       <TableRow key={car._id}>\n//                         <Editable\n//                           data={car}\n//                           _id={car._id}\n//                           type=\"name\"\n//                           value={car.name}></Editable>\n//                         <Editable\n//                           data={car}\n//                           _id={car._id}\n//                           type=\"topSpeed\"\n//                           value={car.topSpeed}></Editable>\n//                         <Editable\n//                           data={car}\n//                           _id={car._id}\n//                           type=\"price\"\n//                           value={car.price}></Editable>\n//                         <TableCell align=\"left\">\n//                           <Button onClick={(e) => handleDeleteCar(e, car._id)}>\n//                             Delete\n//                           </Button>\n//                         </TableCell>\n//                       </TableRow>\n//                     );\n//                   }\n//                   return <div></div>;\n//                 })}\n//             </TableBody>\n//           </Table>\n//           <TablePagination\n//             rowsPerPageOptions={[5]}\n//             // Exception thrown but not handled\n//             count={data.length}\n//             rowsPerPage={5}\n//             page={page}\n//             onChangePage={handleChangePage}\n//           />\n//         </TableContainer>\n//       </Grid>\n//       <Grid item xs={12}>\n//         <NewCar url={URI} fetchData={fetchData} />\n//       </Grid>\n//     </Grid>\n//   );\n// };\n\nexport default CarTable;\n"]},"metadata":{},"sourceType":"module"}