{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\Projects\\\\Web Development\\\\Rescana\\\\CarProjects\\\\frontend\\\\src\\\\Components\\\\main\\\\CarTabel.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TablePagination } from \"@material-ui/core\";\nimport Config from \"../../config\";\nimport Editable from \"./Editable\";\nimport NewCar from \"./NewCar\";\nimport SnackBar from \"./SnackBar\";\n\nconst useStyles = theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  h1: {\n    fontFamily: \"Roboto\",\n    textAlign: \"center\",\n    color: \"#555555\"\n  }\n});\n\nclass CarTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchData = this.fetchData.bind(this);\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleDeleteCar = this.handleDeleteCar.bind(this);\n    this.handleNewData = this.handleNewData.bind(this);\n    this.state = {\n      data: [],\n      page: 0,\n      type: \"success\",\n      message: \"\",\n      open: false\n    };\n  }\n\n  handleNewData(newData) {\n    console.log(newData);\n    this.setState(() => {\n      return {\n        data: newData\n      };\n    });\n  }\n\n  handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState(() => {\n      return {\n        open: false\n      };\n    });\n  }\n\n  handleChangePage(event, newPage) {\n    this.setState(() => {\n      return {\n        page: newPage\n      };\n    });\n  }\n\n  async fetchData(shouldOpen) {\n    try {\n      const res = await axios.get(`${Config._URI}/data`, Config._CONFIG);\n      let msg;\n\n      if (!res.data) {\n        msg = \"Something went wrong...\";\n      } else {\n        msg = \"Recived data.\";\n      }\n\n      if (res && res.status === 200) {\n        const newData = res.data ? res.data.data : undefined;\n        this.setState(() => {\n          return {\n            data: newData,\n            open: shouldOpen,\n            type: \"success\",\n            message: msg\n          };\n        });\n      } else {\n        throw new Error(msg);\n      }\n    } catch (error) {\n      this.setState(() => {\n        return {\n          open: shouldOpen,\n          type: \"error\",\n          message: error.response.data.message ? error.response.data.message : error.message\n        };\n      });\n    }\n  }\n\n  async handleUpdate(event, car) {\n    try {\n      const res = await axios.patch(`${Config._URI}/data`, {\n        _id: car._id,\n        data: {\n          name: car.name,\n          topSpeed: car.topSpeed,\n          price: car.price\n        }\n      }, Config._CONFIG);\n      let msg;\n\n      if (!res.data || !res.data.message) {\n        msg = \"Success\";\n      } else {\n        msg = res.data.message;\n      }\n\n      if (res && res.status === 200) {\n        this.setState(() => {\n          return {\n            open: true,\n            type: \"success\",\n            message: msg\n          };\n        });\n      } else {\n        throw new Error(msg);\n      }\n    } catch (error) {\n      this.setState(() => {\n        return {\n          open: true,\n          type: \"error\",\n          message: error.response.data.message ? error.response.data.message : error.message\n        };\n      });\n      await this.fetchData();\n    }\n  }\n\n  async handleDeleteCar(event, _id) {\n    try {\n      const res = await axios.delete(`${Config._URI}/data`, {\n        config: Config._CONFIG,\n        data: {\n          _id: _id\n        }\n      });\n      let msg;\n\n      if (!res.data || !res.data.message) {\n        msg = \"Success\";\n      } else {\n        msg = res.data.message;\n      }\n\n      if (res && res.status === 200) {\n        if (this.state.data) {\n          const newData = this.state.data.filter(car => car._id !== _id);\n          this.setState(() => {\n            return {\n              data: newData,\n              open: true,\n              type: \"success\",\n              message: msg\n            };\n          });\n        }\n      } else {\n        throw new Error(msg);\n      }\n    } catch (error) {\n      this.setState(() => {\n        return {\n          open: true,\n          type: \"error\",\n          message: error.response.data.message ? error.response.data.message : error.message\n        };\n      });\n    }\n  }\n\n  renderTable() {\n    return /*#__PURE__*/_jsxDEV(TableBody, {\n      children: this.state.data && Array.isArray(this.state.data) && // eslint-disable-next-line\n      this.state.data.map((car, index) => {\n        if (index <= (this.state.page + 1) * 5 - 1 && index >= this.state.page * 5) {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(Editable, {\n              handleNewData: this.handleNewData,\n              data: this.state.data,\n              _id: car._id,\n              index: index,\n              type: \"name\",\n              value: car.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Editable, {\n              handleNewData: this.handleNewData,\n              data: this.state.data,\n              index: index,\n              _id: car._id,\n              type: \"topSpeed\",\n              value: car.topSpeed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Editable, {\n              handleNewData: this.handleNewData,\n              data: this.state.data,\n              index: index,\n              _id: car._id,\n              type: \"price\",\n              value: car.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: e => this.handleUpdate(e, car),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: e => this.handleDeleteCar(e, car._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)]\n          }, car._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    this.fetchData(true);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 10,\n        direction: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 8,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: classes.h1,\n              children: \"Our Cars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: [/*#__PURE__*/_jsxDEV(Table, {\n              className: classes.table,\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Car name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Top speed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), this.renderTable()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n              component: \"div\",\n              rowsPerPageOptions: [5],\n              count: this.state.data.length ? this.state.data.length : 0,\n              rowsPerPage: 5,\n              page: this.state.page,\n              onChangePage: this.handleChangePage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(NewCar, {\n            fetchData: this.fetchData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SnackBar, {\n        handleClose: this.handleClose,\n        type: this.state.type,\n        message: this.state.message,\n        open: this.state.open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles, {\n  withTheme: true\n})(CarTable);","map":{"version":3,"sources":["C:/Users/Administrator/Documents/Projects/Web Development/Rescana/CarProjects/frontend/src/Components/main/CarTabel.jsx"],"names":["React","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","withStyles","Button","Grid","TablePagination","Config","Editable","NewCar","SnackBar","useStyles","theme","root","padding","spacing","h1","fontFamily","textAlign","color","CarTable","Component","constructor","props","fetchData","bind","handleChangePage","renderTable","handleClose","handleUpdate","handleDeleteCar","handleNewData","state","data","page","type","message","open","newData","console","log","setState","event","reason","newPage","shouldOpen","res","get","_URI","_CONFIG","msg","status","undefined","Error","error","response","car","patch","_id","name","topSpeed","price","delete","config","filter","Array","isArray","map","index","e","componentDidMount","render","classes","table","length","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Grid, TablePagination } from \"@material-ui/core\";\n\nimport Config from \"../../config\";\nimport Editable from \"./Editable\";\nimport NewCar from \"./NewCar\";\nimport SnackBar from \"./SnackBar\";\n\nconst useStyles = (theme) => ({\n  root: {\n    padding: theme.spacing(4),\n  },\n  h1: {\n    fontFamily: \"Roboto\",\n    textAlign: \"center\",\n    color: \"#555555\",\n  },\n});\n\nclass CarTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchData = this.fetchData.bind(this);\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.renderTable = this.renderTable.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleDeleteCar = this.handleDeleteCar.bind(this);\n    this.handleNewData = this.handleNewData.bind(this);\n    this.state = {\n      data: [],\n      page: 0,\n      type: \"success\",\n      message: \"\",\n      open: false,\n    };\n  }\n\n  handleNewData(newData) {\n    console.log(newData);\n    this.setState(() => {\n      return { data: newData };\n    });\n  }\n\n  handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState(() => {\n      return { open: false };\n    });\n  }\n\n  handleChangePage(event, newPage) {\n    this.setState(() => {\n      return { page: newPage };\n    });\n  }\n\n  async fetchData(shouldOpen) {\n    try {\n      const res = await axios.get(`${Config._URI}/data`, Config._CONFIG);\n      let msg;\n      if (!res.data) {\n        msg = \"Something went wrong...\";\n      } else {\n        msg = \"Recived data.\";\n      }\n      if (res && res.status === 200) {\n        const newData = res.data ? res.data.data : undefined;\n        this.setState(() => {\n          return {\n            data: newData,\n            open: shouldOpen,\n            type: \"success\",\n            message: msg,\n          };\n        });\n      } else {\n        throw new Error(msg);\n      }\n    } catch (error) {\n      this.setState(() => {\n        return {\n          open: shouldOpen,\n          type: \"error\",\n          message: error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        };\n      });\n    }\n  }\n\n  async handleUpdate(event, car) {\n    try {\n      const res = await axios.patch(\n        `${Config._URI}/data`,\n        {\n          _id: car._id,\n          data: { name: car.name, topSpeed: car.topSpeed, price: car.price },\n        },\n        Config._CONFIG\n      );\n      let msg;\n      if (!res.data || !res.data.message) {\n        msg = \"Success\";\n      } else {\n        msg = res.data.message;\n      }\n      if (res && res.status === 200) {\n        this.setState(() => {\n          return {\n            open: true,\n            type: \"success\",\n            message: msg,\n          };\n        });\n      } else {\n        throw new Error(msg);\n      }\n    } catch (error) {\n      this.setState(() => {\n        return {\n          open: true,\n          type: \"error\",\n          message: error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        };\n      });\n      await this.fetchData();\n    }\n  }\n\n  async handleDeleteCar(event, _id) {\n    try {\n      const res = await axios.delete(`${Config._URI}/data`, {\n        config: Config._CONFIG,\n        data: {\n          _id: _id,\n        },\n      });\n      let msg;\n      if (!res.data || !res.data.message) {\n        msg = \"Success\";\n      } else {\n        msg = res.data.message;\n      }\n      if (res && res.status === 200) {\n        if (this.state.data) {\n          const newData = this.state.data.filter((car) => car._id !== _id);\n          this.setState(() => {\n            return {\n              data: newData,\n              open: true,\n              type: \"success\",\n              message: msg,\n            };\n          });\n        }\n      } else {\n        throw new Error(msg);\n      }\n    } catch (error) {\n      this.setState(() => {\n        return {\n          open: true,\n          type: \"error\",\n          message: error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        };\n      });\n    }\n  }\n\n  renderTable() {\n    return (\n      <TableBody>\n        {this.state.data &&\n          Array.isArray(this.state.data) &&\n          // eslint-disable-next-line\n          this.state.data.map((car, index) => {\n            if (\n              index <= (this.state.page + 1) * 5 - 1 &&\n              index >= this.state.page * 5\n            ) {\n              return (\n                <TableRow key={car._id}>\n                  <Editable\n                    handleNewData={this.handleNewData}\n                    data={this.state.data}\n                    _id={car._id}\n                    index={index}\n                    type=\"name\"\n                    value={car.name}></Editable>\n                  <Editable\n                    handleNewData={this.handleNewData}\n                    data={this.state.data}\n                    index={index}\n                    _id={car._id}\n                    type=\"topSpeed\"\n                    value={car.topSpeed}></Editable>\n                  <Editable\n                    handleNewData={this.handleNewData}\n                    data={this.state.data}\n                    index={index}\n                    _id={car._id}\n                    type=\"price\"\n                    value={car.price}></Editable>\n                  <TableCell align=\"center\">\n                    <Button onClick={(e) => this.handleUpdate(e, car)}>\n                      Update\n                    </Button>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button onClick={(e) => this.handleDeleteCar(e, car._id)}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              );\n            }\n          })}\n      </TableBody>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchData(true);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Grid container spacing={10} direction=\"column\" alignItems=\"center\">\n          <Grid item xs={12} lg={8}>\n            <Grid item xs={12}>\n              <h1 className={classes.h1}>Our Cars</h1>\n            </Grid>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"center\">Car name</TableCell>\n                    <TableCell align=\"center\">Top speed</TableCell>\n                    <TableCell align=\"center\">Price</TableCell>\n                    <TableCell align=\"center\">Update</TableCell>\n                    <TableCell align=\"center\">Delete</TableCell>\n                  </TableRow>\n                </TableHead>\n                {this.renderTable()}\n              </Table>\n              <TablePagination\n                component=\"div\"\n                rowsPerPageOptions={[5]}\n                count={this.state.data.length ? this.state.data.length : 0}\n                rowsPerPage={5}\n                page={this.state.page}\n                onChangePage={this.handleChangePage}\n              />\n            </TableContainer>\n          </Grid>\n          <Grid item xs={12}>\n            <NewCar fetchData={this.fetchData} />\n          </Grid>\n        </Grid>\n        <SnackBar\n          handleClose={this.handleClose}\n          type={this.state.type}\n          message={this.state.message}\n          open={this.state.open}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(CarTable);\n"]},"metadata":{},"sourceType":"module"}