{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\Projects\\\\Web Development\\\\Rescana\\\\CarProjects\\\\frontend\\\\src\\\\Components\\\\main\\\\Editable.jsx\";\nimport { TableCell, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React from \"react\";\nconst URI = \"http://localhost:9000/api\";\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\n\nclass Editable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickEdit = this.onClickEdit.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.state = {\n      ifClick: false,\n      data: this.props.name,\n      value: this.props.value\n    };\n  }\n\n  onClickEdit() {\n    this.setState(() => {\n      return {\n        ifClick: true\n      };\n    });\n  }\n\n  onChangeValue(event) {\n    this.setState(() => {\n      switch (this.props.type) {\n        case \"name\":\n          break;\n\n        case \"topSpeed\":\n          break;\n\n        default:\n          break;\n      }\n\n      console.log(event.target.value);\n      return {\n        data: event.target.value\n      };\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let timer;\n\n    if (prevState.data !== this.state.data) {\n      timer = setTimeout(async () => {\n        try {\n          const res = await axios.patch(`${URI}/data`, {\n            config,\n            _id: {\n              _id: this.props._id\n            },\n            data: {\n              name: this.state.data\n            }\n          });\n\n          if (res.status === 200) {\n            console.log(\"ok\");\n            this.setState(() => {\n              return {\n                ifClick: false\n              };\n            });\n          } else {\n            console.log(\"not ok\");\n          }\n        } catch (error) {}\n      }, 5000);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      children: this.state.ifClick ? /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        value: this.state.value,\n        onChange: e => {\n          this.onChangeValue(e);\n        },\n        label: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.onClickEdit,\n        children: [\" \", this.state.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Editable;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/Projects/Web Development/Rescana/CarProjects/frontend/src/Components/main/Editable.jsx"],"names":["TableCell","TextField","axios","React","URI","config","headers","Editable","Component","constructor","props","onClickEdit","bind","onChangeValue","state","ifClick","data","name","value","setState","event","type","console","log","target","componentDidUpdate","prevProps","prevState","timer","setTimeout","res","patch","_id","status","error","render","e"],"mappings":"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","sourcesContent":["import { TableCell, TextField } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nconst URI = \"http://localhost:9000/api\";\r\nconst config = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nclass Editable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickEdit = this.onClickEdit.bind(this);\r\n    this.onChangeValue = this.onChangeValue.bind(this);\r\n    this.state = {\r\n      ifClick: false,\r\n      data: this.props.name,\r\n      value: this.props.value,\r\n    };\r\n  }\r\n\r\n  onClickEdit() {\r\n    this.setState(() => {\r\n      return { ifClick: true };\r\n    });\r\n  }\r\n\r\n  onChangeValue(event) {\r\n    this.setState(() => {\r\n        switch (this.props.type) {\r\n            case \"name\":\r\n                \r\n                break;\r\n            case \"topSpeed\":\r\n                \r\n                break\r\n        \r\n            default:\r\n                break;\r\n        }\r\n      console.log(event.target.value);\r\n      return { data: event.target.value };\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let timer;\r\n    if (prevState.data !== this.state.data) {\r\n      timer = setTimeout(async () => {\r\n        try {\r\n          const res = await axios.patch(`${URI}/data`, {\r\n            config,\r\n            _id: {\r\n              _id: this.props._id,\r\n            },\r\n            data: {\r\n              name: this.state.data,\r\n            },\r\n          });\r\n          if (res.status === 200) {\r\n            console.log(\"ok\");\r\n            this.setState(() => {\r\n              return { ifClick: false };\r\n            });\r\n          } else {\r\n            console.log(\"not ok\");\r\n          }\r\n        } catch (error) {}\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TableCell>\r\n        {this.state.ifClick ? (\r\n          <TextField\r\n            autoFocus\r\n            value={this.state.value}\r\n            onChange={(e) => {\r\n              this.onChangeValue(e);\r\n            }}\r\n            label=\"name\"\r\n          />\r\n        ) : (\r\n          <div onClick={this.onClickEdit}> {this.state.value}</div>\r\n        )}\r\n      </TableCell>\r\n    );\r\n  }\r\n}\r\nexport default Editable;\r\n"]},"metadata":{},"sourceType":"module"}