{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\Projects\\\\Web Development\\\\Rescana\\\\CarProjects\\\\frontend\\\\src\\\\Components\\\\main\\\\Editable.jsx\";\nimport { TableCell, TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\nclass Editable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickEdit = this.onClickEdit.bind(this);\n    this.onChangeValue = this.onChangeValue(this);\n    this.state = {\n      ifClick: false,\n      data: this.props.name\n    };\n  }\n\n  onClickEdit() {\n    this.setState(() => {\n      return {\n        ifClick: true\n      };\n    });\n  }\n\n  onChangeValue(event) {\n    this.setState(() => {\n      return {\n        data: event.target.value\n      };\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.data !== this.state.data) {\n      setTimeout(() => {\n        try {\n          ax;\n        } catch (error) {}\n      }, 5000);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      children: this.state.ifClick ? /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        value: this.state.name,\n        onChange: this.onChangeValue,\n        label: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.onClickEdit,\n        children: [\" \", this.state.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Editable;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/Projects/Web Development/Rescana/CarProjects/frontend/src/Components/main/Editable.jsx"],"names":["TableCell","TextField","React","Editable","Component","constructor","props","onClickEdit","bind","onChangeValue","state","ifClick","data","name","setState","event","target","value","componentDidUpdate","prevProps","prevState","setTimeout","ax","error","render"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,mBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmB,IAAnB,CAArB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO;AAFN,KAAb;AAID;;AAEDN,EAAAA,WAAW,GAAG;AACZ,SAAKO,QAAL,CAAc,MAAM;AAClB,aAAO;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAP;AACD,KAFD;AAGD;;AAEDF,EAAAA,aAAa,CAACM,KAAD,EAAQ;AACnB,SAAKD,QAAL,CAAc,MAAM;AAClB,aAAO;AAAEF,QAAAA,IAAI,EAAEG,KAAK,CAACC,MAAN,CAAaC;AAArB,OAAP;AACD,KAFD;AAGD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACR,IAAV,KAAmB,KAAKF,KAAL,CAAWE,IAAlC,EAAwC;AACtCS,MAAAA,UAAU,CAAC,MAAM;AACb,YAAI;AACAC,UAAAA,EAAE;AACL,SAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AACJ,OANS,EAMP,IANO,CAAV;AAOD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AAAA,gBACG,KAAKd,KAAL,CAAWC,OAAX,gBACC,QAAC,SAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWG,IAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKJ,aAHjB;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cADD,gBAQC;AAAK,QAAA,OAAO,EAAE,KAAKF,WAAnB;AAAA,wBAAkC,KAAKG,KAAL,CAAWG,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAlDoC;;AAoDvC,eAAeV,QAAf","sourcesContent":["import { TableCell, TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nclass Editable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickEdit = this.onClickEdit.bind(this);\r\n    this.onChangeValue = this.onChangeValue(this);\r\n    this.state = {\r\n      ifClick: false,\r\n      data: this.props.name,\r\n    };\r\n  }\r\n\r\n  onClickEdit() {\r\n    this.setState(() => {\r\n      return { ifClick: true };\r\n    });\r\n  }\r\n\r\n  onChangeValue(event) {\r\n    this.setState(() => {\r\n      return { data: event.target.value };\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.data !== this.state.data) {\r\n      setTimeout(() => {\r\n          try {\r\n              ax\r\n          } catch (error) {\r\n              \r\n          }\r\n      }, 5000);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TableCell>\r\n        {this.state.ifClick ? (\r\n          <TextField\r\n            autoFocus\r\n            value={this.state.name}\r\n            onChange={this.onChangeValue}\r\n            label=\"name\"\r\n          />\r\n        ) : (\r\n          <div onClick={this.onClickEdit}> {this.state.name}</div>\r\n        )}\r\n      </TableCell>\r\n    );\r\n  }\r\n}\r\nexport default Editable;\r\n"]},"metadata":{},"sourceType":"module"}